apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rtmlib-ml-backend-ingress
  labels:
    app: rtmlib-ml-backend
  annotations:
    traefik.frontend.passHostHeader: 'true'
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
    traefik.ingress.kubernetes.io/router.middlewares: default-cors@kubernetescrd
spec:
  rules:
  - host: rtmlib.gawron.cloud  # Main domain like your MCP service
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rtmlib-ml-backend-service
            port:
              number: 9090
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rtmlib-fh-swf-ingress
  labels:
    app: rtmlib-ml-backend
  annotations:
    traefik.frontend.passHostHeader: 'true'
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls.certresolver: letsencrypt
    traefik.ingress.kubernetes.io/router.middlewares: default-cors@kubernetescrd
spec:
  rules:
  - host: rtmlib.fh-swf.cloud  # FH-SWF domain like your MCP service
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rtmlib-ml-backend-service
            port:
              number: 9090
      - path: /
        pathType: Prefix
        backend:
          service:
            name: rtmlib-ml-backend-service
            port:
              number: 80
